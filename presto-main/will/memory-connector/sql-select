1）## bucketed 和 非bucketed join
presto> explain select count(*) from memory.tiny."lineitem" as l, memory.tiny."bucketed-orders" as o where l.orderkey = o.orderkey;
                                                                                                                                                                                                                                                             >
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
 - Output[PlanNodeId 10][_col0] => [count:bigint]                                                                                                                                                                                                            >
         _col0 := count (1:16)                                                                                                                                                                                                                               >
     - Aggregate(FINAL)[PlanNodeId 5] => [count:bigint]                                                                                                                                                                                                      >
             count := "presto.default.count"((count_5)) (1:16)                                                                                                                                                                                               >
         - LocalExchange[PlanNodeId 358][SINGLE] () => [count_5:bigint]                                                                                                                                                                                      >
             - RemoteStreamingExchange[PlanNodeId 364][GATHER] => [count_5:bigint]                                                                                                                                                                           >
                 - Aggregate(PARTIAL)[PlanNodeId 362] => [count_5:bigint]                                                                                                                                                                                    >
                         count_5 := "presto.default.count"(*) (1:16)                                                                                                                                                                                         >
                     - InnerJoin[PlanNodeId 67][("orderkey" = "orderkey_0")][$hashvalue, $hashvalue_7] => []                                                                                                                                                 >
                             Distribution: PARTITIONED                                                                                                                                                                                                       >
                         - RemoteStreamingExchange[PlanNodeId 311][REPARTITION] => [orderkey:bigint, $hashvalue:bigint]                                                                                                                                      >
                                 Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: ?}                                                                                                                                     >
                             - ScanProject[PlanNodeId 0,399][table = TableHandle {connectorId='memory', connectorHandle='MemoryTableHandle{connectorId=memory, schemaName=tiny, tableName=lineitem, tableId=1, columnHandles=[MemoryColumnHandle{name=orderke>
                                     Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                              >
                                     $hashvalue_6 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(orderkey), BIGINT'0')) (1:30)                                                                                                                      >
                                     orderkey := MemoryColumnHandle{name=orderkey, columnType=bigint} (1:30)                                                                                                                                                 >
                         - LocalExchange[PlanNodeId 343][HASH][$hashvalue_7] (orderkey_0) => [orderkey_0:bigint, $hashvalue_7:bigint]                                                                                                                        >
                                 Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                                                                                                                  >
                             - ScanProject[PlanNodeId 1,400][table = TableHandle {connectorId='memory', connectorHandle='MemoryTableHandle{connectorId=memory, schemaName=tiny, tableName=bucketed-orders, tableId=2, columnHandles=[MemoryColumnHandle{name=>
                                     Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                              >
                                     $hashvalue_8 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(orderkey_0), BIGINT'0')) (1:59)                                                                                                                    >
                                     orderkey_0 := MemoryColumnHandle{name=orderkey, columnType=bigint} (1:59)                                                                                                                                               >
                                                                                                                                                                                                                                                             >

2）## colocated-join 和 grouped execution

presto> explain select count(*) from memory.tiny."bucketed-lineitem" as l, memory.tiny."bucketed-orders" as o where l.orderkey = o.orderkey;
                                                                                                                                                                                                                                                             >
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
 - Output[PlanNodeId 10][_col0] => [count:bigint]                                                                                                                                                                                                            >
         _col0 := count (1:16)                                                                                                                                                                                                                               >
     - Aggregate(FINAL)[PlanNodeId 5] => [count:bigint]                                                                                                                                                                                                      >
             count := "presto.default.count"((count_5)) (1:16)                                                                                                                                                                                               >
         - LocalExchange[PlanNodeId 351][SINGLE] () => [count_5:bigint]                                                                                                                                                                                      >
             - RemoteStreamingExchange[PlanNodeId 357][GATHER] => [count_5:bigint]                                                                                                                                                                           >
                 - Aggregate(PARTIAL)[PlanNodeId 355] => [count_5:bigint]                                                                                                                                                                                    >
                         count_5 := "presto.default.count"(*) (1:16)                                                                                                                                                                                         >
                     /**
                      * 可以看到，在两张表使用相同partitioning的情况下，这里可以使用colocated-join特性。
                      */
                     - InnerJoin[PlanNodeId 67][("orderkey" = "orderkey_0")][$hashvalue, $hashvalue_6] => []                                                                                                                                                 >
                             Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: ?, network: 0.00}                                                                                                                                         >
                             Distribution: PARTITIONED                                                                                                                                                                                                       >
                         - ScanProject[PlanNodeId 0,389][table = TableHandle {connectorId='memory', connectorHandle='MemoryTableHandle{connectorId=memory, schemaName=tiny, tableName=bucketed-lineitem, tableId=3, columnHandles=[MemoryColumnHandle{name=or>
                                 Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                                  >
                                 $hashvalue := combine_hash(BIGINT'0', COALESCE($operator$hash_code(orderkey), BIGINT'0')) (1:31)                                                                                                                            >
                                 orderkey := MemoryColumnHandle{name=orderkey, columnType=bigint} (1:30)                                                                                                                                                     >
                         - LocalExchange[PlanNodeId 337][HASH][$hashvalue_6] (orderkey_0) => [orderkey_0:bigint, $hashvalue_6:bigint]                                                                                                                        >
                                 Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                                                                                                                  >
                             - ScanProject[PlanNodeId 1,390][table = TableHandle {connectorId='memory', connectorHandle='MemoryTableHandle{connectorId=memory, schemaName=tiny, tableName=bucketed-orders, tableId=2, columnHandles=[MemoryColumnHandle{name=>
                                     Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}/{source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                              >
                                     $hashvalue_7 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(orderkey_0), BIGINT'0')) (1:68)                                                                                                                    >
                                     orderkey_0 := MemoryColumnHandle{name=orderkey, columnType=bigint} (1:68)                                                                                                                                               >
                                                                                                                                                                                                                                                             >

presto> explain (type distributed) select orderkey, count(*) as cnt from memory.tiny."bucketed-lineitem" group by orderkey;
                                                                                                                                                                                                                                                             >
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------->
 Fragment 0 [SINGLE]                                                                                                                                                                                                                                         >
     Output layout: [orderkey, count]                                                                                                                                                                                                                        >
     Output partitioning: SINGLE []                                                                                                                                                                                                                          >
     Stage Execution Strategy: UNGROUPED_EXECUTION                                                                                                                                                                                                           >
     - Output[PlanNodeId 8][orderkey, cnt] => [orderkey:bigint, count:bigint]                                                                                                                                                                                >
             cnt := count (1:45)                                                                                                                                                                                                                             >
         - RemoteSource[1] => [orderkey:bigint, count:bigint]                                                                                                                                                                                                >
                                                                                                                                                                                                                                                             >
 Fragment 1 [memory:com.facebook.presto.plugin.memory.MemoryPartitioningHandle@49923148]                                                                                                                                                                     >
     Output layout: [orderkey, count]                                                                                                                                                                                                                        >
     Output partitioning: SINGLE []                                                                                                                                                                                                                          >
     Stage Execution Strategy: FIXED_LIFESPAN_SCHEDULE_GROUPED_EXECUTION                                                                                                                                                                                     >
     - Aggregate(FINAL)[orderkey][PlanNodeId 3] => [orderkey:bigint, count:bigint]                                                                                                                                                                           >
             count := "presto.default.count"((count_8)) (1:45)                                                                                                                                                                                               >
         - LocalExchange[PlanNodeId 182][HASH][$hashvalue] (orderkey) => [orderkey:bigint, count_8:bigint, $hashvalue:bigint]                                                                                                                                >
             - Project[PlanNodeId 203][projectLocality = LOCAL] => [orderkey:bigint, count_8:bigint, $hashvalue_9:bigint]                                                                                                                                    >
                     $hashvalue_9 := combine_hash(BIGINT'0', COALESCE($operator$hash_code(orderkey), BIGINT'0')) (1:107)                                                                                                                                     >
                 - Aggregate(PARTIAL)[orderkey][PlanNodeId 180] => [orderkey:bigint, count_8:bigint]                                                                                                                                                         >
                         count_8 := "presto.default.count"(*) (1:45)                                                                                                                                                                                         >
                     - TableScan[PlanNodeId 0][TableHandle {connectorId='memory', connectorHandle='MemoryTableHandle{connectorId=memory, schemaName=tiny, tableName=bucketed-lineitem, tableId=3, columnHandles=[MemoryColumnHandle{name=orderkey, columnType>
                             Estimates: {source: CostBasedSourceInfo, rows: ? (?), cpu: ?, memory: 0.00, network: 0.00}                                                                                                                                      >
                             orderkey := MemoryColumnHandle{name=orderkey, columnType=bigint} (1:66)                                                                                                                                                         >
                                                                                                                                                                                                                                                             >
                                                                                                                                                                                                                                                             >